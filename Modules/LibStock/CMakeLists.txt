include(CMakeSettings.cmake)

# Include
set(SCAF_VAR_INCLUDE_EXTENSIONS "*.h")
SCAF_UTILITY_FUNC_GET_FILES_IN_DIRECTORY_RECURSIVE(
    "Include"
    "${SCAF_VAR_INCLUDE_EXTENSIONS}"
    VAR_SCAF_INCLUDES)

SCAF_UTILITY_FUNC_SOURCE_GROUP("${VAR_SCAF_INCLUDES}")

# Src
set(SCAF_VAR_SOURCE_EXTENSIONS "*.h" "*.cpp")
SCAF_UTILITY_FUNC_GET_FILES_IN_DIRECTORY_RECURSIVE(
    "Src"
    "${SCAF_VAR_SOURCE_EXTENSIONS}"
    VAR_SCAF_SOURCES)

SCAF_UTILITY_FUNC_SOURCE_GROUP("${VAR_SCAF_SOURCES}")

if (${SCAF_VAR_MODULE_SHARED_LIB})
    set(VAR_LIB_TYPE SHARED)
else ()
    set(VAR_LIB_TYPE STATIC)
endif ()

add_library(${SCAF_VAR_MODULE_NAME} ${VAR_LIB_TYPE} 
    ${VAR_SCAF_INCLUDES} ${VAR_SCAF_SOURCES})
set_target_properties(${SCAF_VAR_MODULE_NAME} PROPERTIES
    ARCHIVE_OUTPUT_DIRECTORY    ${SCAF_VAR_OUTPUT_DIR}/$<CONFIG>
    LIBRARY_OUTPUT_DIRECTORY    ${SCAF_VAR_OUTPUT_DIR}/$<CONFIG>
    SCAF_INCLUDE_DIRECTORY      ${CMAKE_CURRENT_LIST_DIR}/Include
    LINKER_LANGUAGE             CXX
    CXX_STANDARD                20
)

if (${SCAF_VAR_MODULE_SHARED_LIB})
    target_compile_definitions(${SCAF_VAR_MODULE_NAME} PRIVATE "API_${SCAF_VAR_MODULE_NAME}")
endif ()
